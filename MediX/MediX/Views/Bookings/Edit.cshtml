@model MediX.Models.Booking

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Edit Booking</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.DateTime, new { id = "DateTime" })
        <div class="container mt-4">
            <div class="row">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.DateTime, new { id = "DateTime" })
                <div class="col-md-6">
                    @Html.Label("Patient", htmlAttributes: new { @class = "col-md-2 control-label" })
                    <div class="form-group">
                        @Html.DropDownList("PatientId", null, "Select Patient", htmlAttributes: new { @class = "form-control", @id = "patientDropdown" })
                        @Html.ValidationMessageFor(model => model.PatientId, "", new { @class = "text-danger" })
                    </div>

                    @Html.Label("Medical Center", htmlAttributes: new { @class = "control-label" })
                    <div class="form-group">
                        @Html.DropDownList("MedicalCenterId", null, "Select Medical Center", htmlAttributes: new { @class = "form-control", @id = "medicalCenterDropdown" })
                    </div>


                    <div class="form-group">
                        @Html.Label("Date", new { @class = "col-md-2 col-form-label" })
                        @Html.TextBox("Date", null, new { type = "date", @class = "form-control", min = DateTime.Now.ToString("yyyy-MM-dd"), @id = "bookingDate" })
                    </div>

                    <div class="form-group">
                        @Html.Label("Time", new { @class = "col-md-2 col-form-label" })
                        @Html.DropDownList("Time", new SelectList(new List<string>(), "Value", "Text"), "Select a time", new { @class = "form-control", @id = "timeDropdown" })
                        @Html.ValidationMessageFor(model => model.DateTime, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "col-md-2 control-label" })
                        @Html.EditorFor(model => model.Notes, new { @class = "form-control", rows = "5" })
                        @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/bootstrap.min.js"></script>
    <script>
        function populateBookingTimes() {
            var medicalCenterId = $('#medicalCenterDropdown').val();
            var bookingDate = $('#bookingDate').val();
            console.log(medicalCenterId);
            console.log(bookingDate);
            if (medicalCenterId && bookingDate) {
                $.ajax({
                    url: '/Bookings/GetPossibleBookingTimes',
                    type: 'GET',
                    data: { medicalCenterId: medicalCenterId, date: bookingDate },
                    success: function (data) {
                        var timeDropdown = $('#timeDropdown');
                        timeDropdown.empty();

                        timeDropdown.append($('<option>').val(null).text("Select time").prop('disabled', true).prop('selected', true));
                        $.each(data.possibleBookingTimes, function (index, time) {
                            var option = $('<option>').val(time).text(time);
                            if (data.bookedTimes.includes(time)) {
                                option.prop('disabled', true);
                            }
                            timeDropdown.append(option);
                        });
                        //var defaultOption = $('<option disabled selected value="">Select time</option>');
                        //timeDropdown.append(defaultOption);
                        //$.each(data.possibleBookingTimes, function (index, time) {
                        //    var option = $('<option></option>').val(time).text(time);
                        //    if (data.bookedTimes.includes(time)) {
                        //        option.prop('disabled', true);
                        //    }
                        //    timeDropdown.append(option);
                        //});


                    },
                    error: function (error) {
                        console.error('Error fetching possible booking times:', error);
                    }
                });
            }
        }


    </script>
    <script>
        // Call populateBookingTimes when MedicalCenterId or bookingDate changes
        $('#medicalCenterDropdown, #bookingDate').change(function () {
            populateBookingTimes();
        });

        // Updates model.DateTime
        $('#timeDropdown').change(function () {
            var date = $('#bookingDate').val();
            var time = $('#timeDropdown').val();
            var combinedDateTime = `${date} ${time}`;
            $('#DateTime').val(combinedDateTime);
        });
    </script>
}