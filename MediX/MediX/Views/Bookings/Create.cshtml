@model MediX.Models.Booking

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/Content/bootstrap.min.css" rel="stylesheet" />
<link href="~/Content/bootstrap-datepicker.min.css" rel="stylesheet" />
<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">

<h2 class="mt-4">New Booking</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="container mt-4">
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.Label("Medical Center", htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownList("MedicalCenterId", null, "Select Medical Center", htmlAttributes: new { @class = "form-control", onchange = "populateBookingTimes()" })
                </div>


                <div class="form-group">
                    @Html.Label("Date", new { @class = "col-md-2 col-form-label" })
                    @Html.TextBox("Date", null, new { type = "date", @class = "form-control", placeholder = "Select a date", min = DateTime.Now.ToString("yyyy-MM-dd"), id = "bookingDate" })
                </div>

                <div class="form-group">
                    @Html.Label("Time", new { @class = "col-md-2 col-form-label" })
                    <div class="col-md-10">
                        @Html.DropDownList("Time", new SelectList(new List<string>(), "Value", "Text"), "Select a time", new { @class = "form-control", id = "timeDropdown" })
                        @Html.ValidationMessageFor(m => m.DateTime, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group" style="display:none;">
                    @Html.TextBoxFor(m => m.DateTime, "{0:yyyy-MM-dd HH:mm}", new { @class = "form-control", id = "DateTime" })
                    @Html.ValidationMessageFor(m => m.DateTime, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.Label("Patient", htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownList("PatientId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.PatientId, "", new { @class = "text-danger" })
                </div>

            </div>

            <div class="col-md-6">

                <div class="form-group">
                    @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label" })
                    @Html.TextAreaFor(model => model.Notes, new { @class = "form-control", rows = "5" })
                    @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div id="calendar"></div>
    <div style="display: none">
        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Patient)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DateTime)
                </th>
                <th></th>
            </tr>
        </table>
    </div>
}



<div class="mt-3">

    <div class="form-group">
        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-secondary" })
        <input type="submit" value="Create" class="btn btn-primary" />
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/bootstrap.min.js"></script>
    @*@Scripts.Render("~/bundles/fullcalendar")*@
    <script>
        function populateBookingTimes() {
            var medicalCenterId = $('#MedicalCenterId').val();
            var bookingDate = $('#bookingDate').val();
            if (medicalCenterId) {
                $.ajax({
                    url: '/Bookings/GetPossibleBookingTimes',
                    type: 'GET',
                    data: { medicalCenterId: medicalCenterId, date: bookingDate },
                    success: function (data) {
                        var timeDropdown = $('#timeDropdown');
                        timeDropdown.empty();
                        $.each(data.possibleBookingTimes, function (index, time) {
                            var option = $('<option></option>').attr('value, time').text(time);
                            if (data.bookedTimes.includes(time)) {
                                option.prop('disabled', true);
                            }
                            timeDropdown.append(option);
                        });
                    },
                    error: function (error) {
                        console.error('Error fetching possible booking times:', error);
                    }
                });
            }
        }
    </script>

}
