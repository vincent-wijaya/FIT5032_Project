@model MediX.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
}

<link href="~/Content/bootstrap-datepicker.css" rel="stylesheet" />
<link href="~/Content/bootstrap.css" rel="stylesheet" />

<main aria-labelledby="title">
    <h2 id="title">@ViewBag.Title.</h2>

    @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { role = "form" }))
    {
        @Html.AntiForgeryToken()
        <h4>Create a new account.</h4>
        <hr />
        @Html.ValidationSummary("", new { @class = "text-danger" })
        <div class="form-control">
            <div class="row">
                @Html.LabelFor(m => m.FirstName, new { @class = "col-md-2 col-form-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                @Html.LabelFor(m => m.LastName, new { @class = "col-md-2 col-form-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                @Html.LabelFor(m => m.DateOfBirth, new { @class = "col-md-2 col-form-label" })
                <div class="col-md-10">
                    <div class="input-group date dateOfBirthPicker" data-provide="dateOfBirthPicker">
                        @Html.TextBoxFor(m => m.DateOfBirth, new { @class = "form-control", placeholder = "dd/mm/yyyy" })
                        <span class="input-group-addon">
                            <i class="glyphicon glyphicon-th"></i>
                        </span>
                    </div>                        
                    @Html.ValidationMessageFor(m => m.DateOfBirth, "", new { @class = "text-danger" })

                </div>
            </div>
            <div class="row">
                @Html.LabelFor(m => m.PhoneNumber, new { @class = "col-md-2 col-form-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.PhoneNumber, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                @Html.LabelFor(m => m.Address, new { @class = "col-md-2 col-form-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.Address, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Address, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-control">
            <div class="row">
                @Html.LabelFor(m => m.Email, new { @class = "col-md-2 col-form-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                @Html.LabelFor(m => m.ConfirmEmail, new { @class = "col-md-2 col-form-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.ConfirmEmail, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.ConfirmEmail, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                @Html.LabelFor(m => m.Password, new { @class = "col-md-2 col-form-label" })
                <div class="col-md-10">
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 col-form-label" })
                <div class="col-md-10">
                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="offset-md-2 col-md-10">
                <input type="submit" value="Register" class="btn btn-success" />
            </div>
        </div>
    }
</main>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/bootstrap-datepicker.js"></script>
    <script>
        $(document).ready(function () {
            $('.dateOfBirthPicker').datepicker({
                format: 'dd/mm/yyyy',
                startDate: new Date(1900, 0, 1),
                endDate: new Date(),
            });
        })

                //$('form').submit(function () {
                //    var dateOfBirthField = $('[name="DateOfBirth"]');
                //    var enteredDate = dateOfBirthField.val();

                //    // Use Moment.js to parse the displayed date and format it to "yyyy-MM-dd"
                //    var parsedDate = moment(enteredDate, 'DD/MM/YYYY');
                //    if (parsedDate.isValid()) {
                //        dateOfBirthField.val(parsedDate.format('YYYY-MM-DD'));
                //    } else {
                //        alert('Please enter a valid date in the format dd/mm/yyyy.');
                //        return false; // Prevent form submission
                //    }
                //});
    </script>
}


